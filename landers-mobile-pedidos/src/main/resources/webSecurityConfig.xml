<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- Rest authentication entry point configuration -->
	<http use-expressions="true" entry-point-ref="restAuthenticationEntryPoint">
		<intercept-url pattern="/api/**" />
		<sec:form-login
			authentication-success-handler-ref="successHandler"
			authentication-failure-handler-ref="failureHandler" />
		<sec:access-denied-handler ref="accessDeniedHandler"/>
		<sec:logout success-handler-ref="logoutSuccessHandler"/>
		<logout />
	</http>

	<!-- Connect the custom authentication success handler -->
	<beans:bean id="successHandler"
		class="com.landers.mobile.security.RestAuthenticationSuccessHandler" />
	<!-- Using failure handler -->
	<beans:bean id="failureHandler"
		class="com.landers.mobile.security.RestAuthenticationFailureHandler" />
	<!-- Using access denied handler -->
	<beans:bean id="accessDeniedHandler"
		class="com.landers.mobile.security.RestAuthenticationAccessDeniedHandler"/>
	<!-- Using logout success handler -->
	<beans:bean id="logoutSuccessHandler"
		class="com.landers.mobile.security.RestAuthenticationSuccessLogoutHandler" />

	<!-- Authentication manager -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<!-- <user-service> <user name="temporary" password="temporary" authorities="ROLE_ADMIN" 
				/> <user name="user" password="userPass" authorities="ROLE_USER" /> </user-service> -->
			<password-encoder hash="plaintext" />
		</authentication-provider>
	</authentication-manager>

	<!-- Enable the annotations for defining the secure role -->
	<global-method-security secured-annotations="enabled" />

	<beans:bean id='authenticationManager'
		class='org.springframework.security.authentication.ProviderManager'>
		<beans:property name='providers'>
			<beans:list>
				<beans:ref bean="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="userDetailsService"
		class="com.landers.mobile.security.LandersUserDetailsService">
	</beans:bean>

	<beans:bean id='daoAuthenticationProvider'
		class='org.springframework.security.authentication.dao.DaoAuthenticationProvider'>
		<beans:property name='userDetailsService' ref='userDetailsService' />
	</beans:bean>
	
	<!-- the DataSource (parameterized for configuration via a PropertyPlaceHolderConfigurer) -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean>

	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<beans:bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<beans:constructor-arg ref="dataSource"/>
	</beans:bean>
		
	<!-- Definition for userDao bean -->
	<beans:bean id="userDao" class="com.landers.mobile.dao.impl.UserDaoJdbc">
		<beans:property name="jdbcTemplate" ref="namedParameterJdbcTemplate" />
	</beans:bean>
	
	<!--  Transactions  -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans:beans>